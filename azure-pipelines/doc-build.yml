

trigger:
- azure

pr:
- azure

variables:
  system.debug: 'true'
  ref.data.home: '$(Agent.BuildDirectory)/tardis-refdata'

  ref.data.github.url: 'https://github.com/Youssef15015/tardis-refdata.git'
  tardis.build.dir: $(Build.Repository.LocalPath)

  travis.repo.slug: 'Youssef15015/tardis'



jobs:



- job: 'Test'
  pool:
    vmImage: $[variables.vm_Image]


  strategy:
    matrix:
      linux:
        vm_Image: 'Ubuntu-16.04'
        conda: '/usr/share/miniconda'
    maxParallel: 4

  steps:

  - bash: |
          ls
    displayName: Check for secure files




# Download Secure File
# Download a secure file to a temporary location on the build or release agent
  - task: DownloadSecureFile@1
    inputs: 
      secureFile: 'id_azure_rsa'

  - task: DownloadSecureFile@1
    inputs: 
      secureFile: 'id_azure_rsa.pub'

  - bash: |
          ls $(Agent.TempDirectory)
    displayName: Check for downloaded secure files


  - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      sudo chown -R $USER $CONDA
      conda update -y conda
    displayName: updating conda and activating

  - bash: |
        sh ci-helpers/install_tardis_env.sh
    displayName: 'Install TARDIS env'

  - bash: |
        sh ci-helpers/fetch_reference_data.sh
    displayName: 'Fetch Reference Data'


# Install SSH Key
# Install an SSH key prior to a build or release
  - task: InstallSSHKey@0
    inputs:
     hostName: '|1|ViGvJeAsz1LySgGpwY298Vs0r0o=|1FYXYXT4xW+41wS7qWLTBh673PE= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
     sshPublicKey: 'id_azure_rsa.pub' 
     #sshPassphrase: # Optional $(Agent.TempDirectory)
     sshKeySecureFile: 'id_azure_rsa'

  - bash: |
        source activate tardis
        ./deploy_docs.sh
    displayName: 'TARDIS build'



#  - task: PublishTestResults@2
#    condition: succeededOrFailed()
#    inputs:
#      testResultsFiles: '**/test-*.xml'
#      testRunTitle: 'Test results for TARDIS on $(vm_Image)'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#      codeCoverageTool: Cobertura
#      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'