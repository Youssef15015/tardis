# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


trigger:
- master

pr:
- master

variables:
  system.debug: 'true'
  ref.data.home: '$(Agent.BuildDirectory)/tardis-refdata'

  ref.data.github.url: 'https://github.com/Youssef15015/tardis-refdata.git'
  tardis.build.dir: $(Build.Repository.LocalPath)

  travis.repo.slug: 'Youssef15015/tardis'





jobs:

- job: 'Test'
  pool:
    vmImage: $[variables.vm_Image]

  strategy:
    matrix:
      linux:
        vm_Image: 'Ubuntu-16.04'
        conda: '/usr/share/miniconda'
    maxParallel: 4



  steps:

# Install SSH Key
# Install an SSH key prior to a build or release
# Azure Key Vault
# Download Azure Key Vault Secrets
  - task: InstallSSHKey@0
    inputs:
      hostName: Deployment
      sshPublicKey:
      sshKeySecureFile: "qAaEYYT+KCg9ItgWLgv+6qEeij+v/7bx+Y9K7i/9N9zkvdCtjwE0330OCL9psnFFRuUqSXEH2vuf0IgmUTMlHUVt0VF1eZE5zSqtg8bsKx6YnsdLQhZ8NKW69RpdG/eyKIwaSYwiTX+qZmTaUR2KIWKSTHcNjxtfmYY1TASH5xT//KOrTsBhdZpKlqJNOu5aqcsDA8/SGIiG7eMHq+2HlYlCpdZb17v25HI3SvLIn9Aws+SBQuEQ7Opp2IgyGzOFhkJWPhgm33OJF36eKAMXSqACThgeg6gbJU2a0pMiHSyR80692ZK8FVGk1lDZJNwlou7xw4cR0XvdBptvrldvCA6Yb1685Em22s2+QMxQFLnHxEtr8syJiIMkGqnnS3BXiNgJf3+BfsnOW+iA6tCkCPreLX/0pJZCGVUIaYdKbFWRmjHmNt8eLaHT4ZlG6qywGtjWcaXdRyQd+NMPGxJa+Z7/EGZGHARRGyEwf1Et68rd3RjSDC+KiS7S5A3q3BJYeUokvEIhl8SADwrUwj1VnM+CErsjdQ/BgbQHOZ+ctM7EjjTp1qhuUSuF1MMCzX4i/myQZcaHOMygUziBiywdwGBvoAd0NXux5OnGpGH6IFa1MNv1l3I8xUmatDmbYxGK4bTvmkTbtyEGGlcX+1FDpwoCha/pUymOyM6YobfYcVc="
    displayName:  Installing Key for Deployment

  - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      sudo chown -R $USER $CONDA
      conda update -y conda
    displayName: updating conda and activating

  - bash: |
        sh ci-helpers/install_tardis_env.sh
    displayName: 'Install TARDIS env'

  - bash: |
        sh ci-helpers/fetch_reference_data.sh
    displayName: 'Fetch Reference Data'


  - bash: |
         source activate tardis
         conda install -y -c conda-forge nodejs
    displayName: 'Install conda forge'

  - bash: |
         source activate tardis
         npm install -g github-changes
    displayName: 'Install github-changes'


  - bash: |
        source activate tardis
        python setup.py build_docs 
    displayName: 'TARDIS build'

  
  - bash: |
        source activate tardis
        git lfs uninstall
    displayName: 'LFS uninstall'


  - bash: |
        source activate tardis
        pip install doctr 
    displayName: 'Install doctr'

  - bash: |
        source activate tardis
        doctr deploy --built-docs docs/_build/html . --force
    displayName: 'Deploy'

    
#  - task: PublishTestResults@2
#    condition: succeededOrFailed()
#    inputs:
#      testResultsFiles: '**/test-*.xml'
#      testRunTitle: 'Test results for TARDIS on $(vm_Image)'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#      codeCoverageTool: Cobertura
#      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
