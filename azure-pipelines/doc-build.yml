# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


trigger:
- master

pr:
- master

variables:
  system.debug: 'true'
  ref.data.home: '$(Agent.BuildDirectory)/tardis-refdata'

  ref.data.github.url: 'https://github.com/Youssef15015/tardis-refdata.git'
  tardis.build.dir: $(Build.Repository.LocalPath)

  travis.repo.slug: 'Youssef15015/tardis'





jobs:

- job: 'Test'
  pool:
    vmImage: $[variables.vm_Image]

  strategy:
    matrix:
      linux:
        vm_Image: 'Ubuntu-16.04'
        conda: '/usr/share/miniconda'
    maxParallel: 4



  steps:

# Install SSH Key
# Install an SSH key prior to a build or release
- task: InstallSSHKey@0
  inputs:
    hostName: 
    sshPublicKey: "h+KzB5iM24j1uELkWuH9VFwmh46KxbrgMV1GsGbLEaFNX/pT125V8nnmrVN18sZqWqh/oNhlhKwqvNkIkgXCtkDdbsb7h81Y0jzMop7c9AbL1cB+noL9sbnGiYBgbxQgVfeuiJPcS6tjEsySnoxRnbGmdk39qWG/PO27UGNQocTY9KaKMZkTMSQAZuA5lYYi9ojrWgAWMacCvzz7491yHcu2x1mlEyp2RuxkQxAmToA1KEnE5qKuDqx05TmOphKrwGg2jk2jIp8H0A6cpFilXOdJQdNfYmi6kMHRpQr2GU64XdlWOl48Jbnkkqbx5SNpkI/z8wQYzZQbGJsoDFI7Nf+zaorljPBebut2oBGorIr8DM+iTNlzKWr5tkuOoONAijo1OJrJ8trterUgBiphbUwCyoe8meHwVqQ3gvtlMrGlavFt7GlBFxLQ558bJlqQwnQ6YxJeieJBqqa0Lsx3w1JeDCu6GKJqgtfD416+YnjjVHPvGLmPbJqu/S6HWeMKIvupYitHLIhs6+jZ7oMQMeRf1b4amDZ+S2Gl+wIRbubL7Qf2Y1KMfFHtWvyUc6BgIEfwNlbwTF9Jwvg4nw2TKwUBwPF7wovV0TkAzzy+6G6gER1315PxO9DEjeuy2KkzIfjqyNcbhqiVlOGIu00G+cZr/EucXKDmNkJ3Et6a/3E="
    #sshPassphrase: # Optional
    sshKeySecureFile: 


  - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      sudo chown -R $USER $CONDA
      conda update -y conda
    displayName: updating conda and activating

  - bash: |
        sh ci-helpers/install_tardis_env.sh
    displayName: 'Install TARDIS env'

  - bash: |
        sh ci-helpers/fetch_reference_data.sh
    displayName: 'Fetch Reference Data'


  - bash: |
         source activate tardis
         conda install -y -c conda-forge nodejs
    displayName: 'Install conda forge'

  - bash: |
         source activate tardis
         npm install -g github-changes
    displayName: 'Install github-changes'


  - bash: |
        source activate tardis
        python setup.py build_docs 
    displayName: 'TARDIS build'

  
  - bash: |
        source activate tardis
        git lfs uninstall
    displayName: 'LFS uninstall'


  - bash: |
        source activate tardis
        pip install doctr 
    displayName: 'Install doctr'

  - bash: |
        source activate tardis
        doctr deploy --built-docs docs/_build/html . --force
    displayName: 'Deploy'

    
#  - task: PublishTestResults@2
#    condition: succeededOrFailed()
#    inputs:
#      testResultsFiles: '**/test-*.xml'
#      testRunTitle: 'Test results for TARDIS on $(vm_Image)'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#      codeCoverageTool: Cobertura
#      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
