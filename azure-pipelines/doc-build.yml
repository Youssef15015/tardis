# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


trigger:
- master

pr:
- master

variables:
  system.debug: 'true'
  ref.data.home: '$(Agent.BuildDirectory)/tardis-refdata'

  ref.data.github.url: 'https://github.com/Youssef15015/tardis-refdata.git'
  tardis.build.dir: $(Build.Repository.LocalPath)

  travis.repo.slug: 'Youssef15015/tardis'





jobs:

- job: 'Test'
  pool:
    vmImage: $[variables.vm_Image]

  strategy:
    matrix:
      linux:
        vm_Image: 'Ubuntu-16.04'
        conda: '/usr/share/miniconda'
    maxParallel: 4



  steps:

# Install SSH Key
# Install an SSH key prior to a build or release
# Azure Key Vault
# Download Azure Key Vault Secrets
  - task: InstallSSHKey@0
    inputs:
      hostName: Deployment
      sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUJKA0xf3FrgRSGLNHTf+Q7Wim98ftHlqSv+RuXdLPBYF9JXaQw5FSi+vfi0n99l1wQBPRNWtTn7hCZx+l4eL7dpbGJQO1t5fyhEN5RgebE041T7AKzQMprY7lJCl1WsGnAD2JlkXGGz1EFmNjMEaFSEirKJnxYZtdnLLfXcRUJnXRFm6seu1P6wuU/rna03IJeWsFuG367WNAMjqu6Vn2oin/Is4D2iMWQazSP17lQwmOP9LhyBxDjHVDBptaFbQnYAaa5XM52pJ9O/TsRelfnPRyoUEXK+gGqUfv7pMm2ofvl8N2OaH6ZwQSkbbEdABkk1rFaHvWXcmhkFesdOIb youssef@youssef-Latitude-E7440'
      sshKeySecureFile: '-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----'
    displayName: Installing Key for Deployment

  - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      sudo chown -R $USER $CONDA
      conda update -y conda
    displayName: updating conda and activating

  - bash: |
        sh ci-helpers/install_tardis_env.sh
    displayName: 'Install TARDIS env'

  - bash: |
        sh ci-helpers/fetch_reference_data.sh
    displayName: 'Fetch Reference Data'


  - bash: |
         source activate tardis
         conda install -y -c conda-forge nodejs
    displayName: 'Install conda forge'

  - bash: |
         source activate tardis
         npm install -g github-changes
    displayName: 'Install github-changes'


  - bash: |
        source activate tardis
        python setup.py build_docs 
    displayName: 'TARDIS build'

  
  - bash: |
        source activate tardis
        git lfs uninstall
    displayName: 'LFS uninstall'


  - bash: |
        source activate tardis
        pip install doctr 
    displayName: 'Install doctr'

  - bash: |
        source activate tardis
        doctr deploy --built-docs docs/_build/html . --force
    displayName: 'Deploy'

    
#  - task: PublishTestResults@2
#    condition: succeededOrFailed()
#    inputs:
#      testResultsFiles: '**/test-*.xml'
#      testRunTitle: 'Test results for TARDIS on $(vm_Image)'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#      codeCoverageTool: Cobertura
#      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
